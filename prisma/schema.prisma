generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  email         String   @unique
  name          String
  image         String
  username      String   @unique
  bio           String
  onboarded     Boolean
  posts         Post[]
  comments      Comment[]
  likes         Like[]
  createdClubs  Club[]   @relation("ClubCreator")
  memberships   Membership[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  comments  Comment[]
  likes     Like[]
  club      Club?    @relation(fields: [clubId], references: [id])
  clubId    String?  @db.ObjectId
}

model Comment {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  author   User     @relation(fields: [authorId], references: [id])
  authorId String   @db.ObjectId
  post     Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String   @db.ObjectId
  parent   Comment? @relation("CommentReplies", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId String?  @db.ObjectId
  createdAt DateTime @default(now())
  replies  Comment[] @relation("CommentReplies")
  likes    Like[]
}

model Like {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  post      Post?   @relation(fields: [postId], references: [id])
  postId    String? @db.ObjectId
  comment   Comment? @relation(fields: [commentId], references: [id])
  commentId String? @db.ObjectId
}

model Club {
  id      String       @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  creator User         @relation("ClubCreator", fields: [creatorId], references: [id])
  creatorId String     @db.ObjectId
  image         String
  bio           String
  members Membership[]
  posts   Post[]
}

model Membership {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  clubId String @db.ObjectId
  userId String @db.ObjectId
  club   Club   @relation(fields: [clubId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}
